apply plugin: 'com.android.library'
apply plugin: 'jsonschema2pojo'
apply from: 'maven-push.gradle'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:1.0.0-alpha2'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 16  // Jelly Bean 4.1.x (basically Java 6)
        targetSdkVersion 25
        versionCode 18
        versionName '0.10.4'

        consumerProguardFiles 'proguard-rules.pro'
    }

    // This makes it slightly nicer to code (like diamond operator) but
    // keep in mind that we are still writing for Java 6 (so no try-with
    // resources).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError true
        quiet true
        textReport true
        textOutput 'stdout'
        disable 'InvalidPackage'  // See https://github.com/square/okio/issues/58
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.2'

    compile 'com.google.android.gms:play-services-location:9.8.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.github.tomakehurst:wiremock:2.11.0'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    androidTestCompile 'com.android.support:support-annotations:25.0.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
}

jsonSchema2Pojo {
    sourceType = 'yamlschema'
    annotationStyle = 'gson'
    includeAccessors = false
    generateBuilders = true
    useLongIntegers = true
    propertyWordDelimiters = ['_'] as char[]

    removeOldOutput = true
    source = files('src/main/json')
}

task deleteJar(type: Delete) {
    delete 'libs/logmanagementlib.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'logmanagementlib.jar')
}

createJar.dependsOn(deleteJar, build)

apply plugin: 'com.android.library'
apply plugin: 'jsonschema2pojo'
apply from: 'maven-push.gradle'

buildscript {
    repositories {
        flatDir {
            dirs '../lib/jsonschema2pojo/lib'
        }
    }
    dependencies {
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.11-SNAPSHOT'
        classpath fileTree(dir: '../lib/jsonschema2pojo/lib', include: '*.jar')
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.0'

    defaultConfig {
        minSdkVersion 16  // Jelly Bean 4.1.x (basically Java 6)
        targetSdkVersion 25
        versionCode 16
        versionName '0.10.2-beta'

        consumerProguardFiles 'proguard-rules.pro'
    }

    // This makes it slightly nicer to code (like diamond operator) but
    // keep in mind that we are still writing for Java 6 (so no try-with
    // resources).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError true
        quiet true
        textReport true
        textOutput 'stdout'
        disable 'InvalidPackage'  // See https://github.com/square/okio/issues/58
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.2'

    compile 'javax.annotation:javax.annotation-api:1.2'
    compile 'org.apache.commons:commons-lang3:3.5'

    compile 'com.google.android.gms:play-services-location:9.8.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'com.github.tomakehurst:wiremock:2.11.0'
    testCompile 'org.hamcrest:hamcrest-library:1.3'

    androidTestCompile 'com.android.support:support-annotations:25.0.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
}

jsonSchema2Pojo {
    annotationStyle = 'gson'
    usePublicFields = true
    generateBuilderClasses = true
    immutable = false
    useCommonsLang3 = true
    includeJsr303Annotations = false
    useLongIntegers = true
    propertyWordDelimiters = ['_'] as char[]

    removeOldOutput = true
    source = files('src/main/json')
}

task compileAndroid(dependsOn: 'generateJsonSchema2PojoForRelease') << {
    if (System.getenv("CI") == null) {
        def JAVA_DIR = '../code/java/sift-json/src/main/json/'
        def androidDir = new File('sift/src/main/json')
        def diffFiles = []

        androidDir.eachFile {
            def cmd = "diff ${it.getAbsolutePath()} ${JAVA_DIR}${it.getName()}"
            int status = cmd.execute().waitFor()
            if (status != 0) {
                diffFiles << it.getName()
            }
        }

        if (diffFiles.size() != 0) {
            throw new GradleException("The following files are not in sync:\n${diffFiles.join('\n')}")
        }
    }
}

tasks.preBuild.dependsOn(compileAndroid);

task deleteJar(type: Delete) {
    delete 'libs/logmanagementlib.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'logmanagementlib.jar')
}

createJar.dependsOn(deleteJar, build)
